rules:
- id: dangerous-asyncio-shell-audit
  patterns:
  - pattern-either:
    - pattern: $LOOP.subprocess_shell($PROTOCOL, $CMD)
    - pattern: asyncio.subprocess.create_subprocess_shell($CMD, ...)
    - pattern: asyncio.create_subprocess_shell($CMD, ...)
  - pattern-not-inside: |
      $CMD = "..."
      ...
  - pattern-not: $LOOP.subprocess_shell($PROTOCOL, "...")
  - pattern-not: asyncio.subprocess.create_subprocess_shell("...", ...)
  - pattern-not: asyncio.create_subprocess_shell("...", ...)
  message: >-
    Detected asyncio subprocess function without a static string. If this data can
    be
    controlled by a malicious actor, it may be an instance of command injection.
    Audit the use of this call to ensure it is not controllable by an external resource.
    You may consider using 'shlex.escape()'.
  metadata:
    owasp:
    - A01:2017 - Injection
    - A03:2021 - Injection
    cwe:
    - "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
    asvs:
      section: 'V5: Validation, Sanitization and Encoding Verification Requirements'
      control_id: 5.3.8 OS Command Injection
      control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements
      version: '4'
    references:
    - https://docs.python.org/3/library/asyncio-subprocess.html
    - https://docs.python.org/3/library/shlex.html
    - https://semgrep.dev/docs/cheat-sheets/python-command-injection/
    category: security
    technology:
    - python
    confidence: LOW
    cwe2022-top25: true
    cwe2021-top25: true
    subcategory:
    - audit
    likelihood: LOW
    impact: HIGH
  languages:
  - python
  severity: ERROR
