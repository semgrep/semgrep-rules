rules:
  - id: sql-injection-db-cursor-execute
    patterns:
      - pattern-inside: |
          def $F(...):
            ...
      - pattern-either:
        # match when direct flow format func
        - pattern: |
            $CURSOR.execute($S.format(request.$W.get($X)), ...)
        - pattern: |
            $CURSOR.execute($S.format(request.$W[$X]), ...)
        - pattern: |
            $CURSOR.execute($S.format(request.$W($X)), ...)
        - pattern: |
            $CURSOR.execute($S.format(request.$W), ...)
        # match when direct flow f-string
        - pattern: |
            $CURSOR.execute(f"...{request.$W.get($X)}", ...)
        - pattern: |
            $CURSOR.execute(f"...{request.$W[$X]}", ...)
        - pattern: |
            $CURSOR.execute(f"...{request.$W($X)}", ...)
        - pattern: |
            $CURSOR.execute(f"...{request.$W}", ...)
        # match when direct flow % formating
        - pattern: |
            $CURSOR.execute($S % request.$W.get($X), ...)
        - pattern: |
            $CURSOR.execute($S % request.$W[$X], ...)
        - pattern: |
            $CURSOR.execute($S % request.$W($X), ...)
        - pattern: |
            $CURSOR.execute($S % request.$W, ...)
        # match when `format` is used
        - pattern: |
            $V = request.$W.get($X)
            ...
            $CURSOR.execute($S.format($V), ...)
        - pattern: |
            $V = request.$W[$X]
            ...
            $CURSOR.execute($S.format($V), ...)
        - pattern: |
            $V = request.$W($X)
            ...
            $CURSOR.execute($S.format($V), ...)
        - pattern: |
            $V = request.$W
            ...
            $CURSOR.execute($S.format($V), ...)
        # match when `%` is used
        - pattern: |
            $V = request.$W.get($X)
            ...
            $CURSOR.execute($S % $V, ...)
        - pattern: |
            $V = request.$W[$X]
            ...
            $CURSOR.execute($S % $V, ...)
        - pattern: |
            $V = request.$W($X)
            ...
            $CURSOR.execute($S % $V, ...)
        - pattern: |
            $V = request.$W
            ...
            $CURSOR.execute($S % $V, ...)
        # match when f-string is used
        - pattern: |
            $V = request.$W.get($X)
            ...
            $CURSOR.execute(f"...{$V}", ...)
        - pattern: |
            $V = request.$W.get($X)
            ...
            $CURSOR.execute(f"...{$V}...", ...)
        - pattern: |
            $V = request.$W[$X]
            ...
            $CURSOR.execute(f"...{$V}", ...)
        - pattern: |
            $V = request.$W[$X]
            ...
            $CURSOR.execute(f"...{$V}...", ...)
        - pattern: |
            $V = request.$W($X)
            ...
            $CURSOR.execute(f"...{$V}", ...)
        - pattern: |
            $V = request.$W($X)
            ...
            $CURSOR.execute(f"...{$V}...", ...)
        - pattern: |
            $V = request.$W
            ...
            $CURSOR.execute(f"...{$V}", ...)
        - pattern: |
            $V = request.$W
            ...
            $CURSOR.execute(f"...{$V}...", ...)
    message: |
      Data from request is passed to execute().
      This is a SQL injection and could be exploited.
      See https://docs.djangoproject.com/en/3.0/topics/security/#sql-injection-protection to learn how to mitigate.
      See https://cwe.mitre.org/data/definitions/89.html to learn about SQLi.
    languages: [python]
    severity: ERROR
