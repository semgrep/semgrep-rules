rules:
- id: jwt-exposed-credentials
  languages:
  - javascript
  metadata:
    cwe: 'CWE-522: Insufficiently Protected Credentials'
    owasp: 'A2: Broken Authentication'
    source-rule-url: https://r2c.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/
    asvs:
      section: 'V3: Session Management Verification Requirements'
      control_id: 3.5.2 Static API keys or secret
      control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v35-token-based-session-management
      version: '4'
    references:
    - https://cwe.mitre.org/data/definitions/522.html
    category: security
    technology:
    - jwt
  message: |
    Password is exposed through JWT token payload. This is not encrypted and
    the password could be compromised. Do not store passwords in JWT tokens.
  severity: ERROR
  pattern-either:
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $T = $JWT.sign({password:...},...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $T = $JWT.sign({password:...},...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $JWT.sign({password:...},...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = {password:...};
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = {password:...};
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = {password:...};
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = {password:...};
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = {password:...};
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = {password:...};
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P.password = ...;
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P.password = ...;
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P.password = ...;
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = Object.assign(...,{password:...},...);
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = Object.assign(...,{password:...},...);
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = Object.assign(...,{password:...},...);
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = Object.assign(...,{password:...},...);
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = Object.assign(...,{password:...},...);
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = Object.assign(...,{password:...},...);
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $T = $JWT.sign(Object.assign(...,{password:...},...),...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $T = $JWT.sign(Object.assign(...,{password:...},...),...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $JWT.sign(Object.assign(...,{password:...},...),...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $T = $JWT.sign({$U:{password:...}},...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $T = $JWT.sign({$U:{password:...}},...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $JWT.sign({$U:{password:...}},...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = {$U:{password:...}};
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = {$U:{password:...}};
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = {$U:{password:...}};
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = {$U:{password:...}};
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = {$U:{password:...}};
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = {$U:{password:...}};
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P.$U.password = ...;
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P.$U.password = ...;
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P.$U.password = ...;
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = Object.assign(...,{$U:{password:...}},...);
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = Object.assign(...,{$U:{password:...}},...);
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $P = Object.assign(...,{$U:{password:...}},...);
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = Object.assign(...,{$U:{password:...}},...);
      ...
      var $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = Object.assign(...,{$U:{password:...}},...);
      ...
      $T = $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $P = Object.assign(...,{$U:{password:...}},...);
      ...
      $JWT.sign($P,...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      var $T = $JWT.sign(Object.assign(...,{$U:{password:...}},...),...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $T = $JWT.sign(Object.assign(...,{$U:{password:...}},...),...);
  - pattern: |
      var $JWT = require("jsonwebtoken");
      ...
      $JWT.sign(Object.assign(...,{$U:{password:...}},...),...);
