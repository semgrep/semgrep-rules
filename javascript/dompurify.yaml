rules:
- id: harden-dompurify-usage
  patterns:
  - pattern: DOMPurify.sanitize($X, ...)
  - pattern-not: |
      DOMPurify.sanitize($X, {RETURN_DOM_FRAGMENT: true})
  - pattern-not: |
      DOMPurify.sanitize($X, {RETURN_DOM: true})
  message: DOMPurify.sanitize() was called without using RETURN_DOM or RETURN_DOM_FRAGMENT. This is prone to mutation XSS,
    which could possibly bypass existing XSS filters. Adding one of these options will harden against potential future DOMPurify
    exploits.
  languages:
  - js
  - ts
  severity: ERROR
  fix: |
    DOMPurify.sanitize($X, {RETURN_DOM: true});
  metadata:
    category: security
    technology:
    - javascript
    - typescript
    references:
    - https://research.securitum.com/mutation-xss-via-mathml-mutation-dompurify-2-0-17-bypass/
