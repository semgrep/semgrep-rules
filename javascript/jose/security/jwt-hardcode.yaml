rules:
  - id: hardcoded-jwt-secret
    message: >-
      Hardcoded JWT secret or private key is used.
      This is a Insufficiently Protected Credentials weakness: https://cwe.mitre.org/data/definitions/522.html
      Consider using an appropriate security mechanism to protect the credentials (e.g. keeping secrets in environment variables: process.env.SECRET)
    metadata:
      cwe: "CWE-522: Insufficiently Protected Credentials"
      owasp:
        - A07:2021 - Identification and Authentication Failures
        - A02:2017 - Broken Authentication
      references:
        - https://r2c.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/
      asvs:
        section: "V3: Session Management Verification Requirements"
        control_id: 3.5.2 Static API keys or secret
        control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v35-token-based-session-management
        version: "4"
      category: security
      technology:
        - jose
        - jwt
    languages: [javascript, typescript]
    severity: ERROR
    options:
      symbolic_propagation: true
    patterns:
      - pattern-inside: |
          var $JOSE = require("jose");
          ...
      - pattern-either:
          - pattern-inside: |
              var {JWT} = $JOSE;
              ...
          - pattern-inside: |
              var {JWK, JWT} = $JOSE;
              ...
      - pattern-either:
            - pattern: |
                JWT.verify($P, "...", ...);
            - pattern: |
                JWT.sign($P, "...", ...);
            - pattern: |
                JWT.verify($P, JWK.asKey("..."), ...);     
            - pattern: |
                $JWT.sign($P, JWK.asKey("..."), ...);
