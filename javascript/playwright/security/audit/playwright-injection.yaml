rules:
- id: playwright-goto-injection
  message: |
    If unverified user data can reach the `goto` method it can result in Server-Side Request Forgery vulnerabilities
  severity: WARNING
  metadata:
    owasp: 'A1: Injection'
    cwe: 'CWE-918: Server-Side Request Forgery (SSRF)'
  languages: [javascript]
  patterns:
  - pattern-inside: |
      ...
      require('playwright');
      ...
  - pattern-not-inside: |
      ...
      var $INPUT = "...";
      ...
  - pattern: $PAGE.goto($INPUT,...)
  - pattern-not: $PAGE.goto("...",...)
- id: playwright-setcontent-injection
  message: |
    If unverified user data can reach the `setContent` method it can result in Server-Side Request Forgery vulnerabilities
  severity: WARNING
  metadata:
    owasp: 'A1: Injection'
    cwe: 'CWE-918: Server-Side Request Forgery (SSRF)'
  languages: [javascript]
  patterns:
  - pattern-inside: |
      ...
      require('playwright');
      ...
  - pattern-not-inside: |
      ...
      var $INPUT = "...";
      ...
  - pattern: $PAGE.setContent($INPUT,...)
  - pattern-not: $PAGE.setContent("...",...)
- id: playwright-evaluate-code-injection
  message: |
    If unverified user data can reach the `evaluate` method it can result in Server-Side Request Forgery vulnerabilities
  severity: WARNING
  metadata:
    owasp: 'A1: Injection'
    cwe: 'CWE-918: Server-Side Request Forgery (SSRF)'
  languages: [javascript]
  patterns:
  - pattern-inside: |
      ...
      require('playwright');
      ...
  - pattern-not-inside: |
      ...
      var $INPUT = "...";
      ...
  - pattern-not-inside: |
      ...
      var $INPUT = function $FNAME(...){...};
      ...
  - pattern-either:
    - pattern: $PAGE.evaluate($INPUT,...)
    - pattern: $PAGE.evaluateHandle($INPUT,...)
    - pattern: $PAGE.evaluateOnNewDocument($INPUT,...)
  - pattern-not: $PAGE.evaluate("...",...)
  - pattern-not: $PAGE.evaluate(function(...){...},...)
  - pattern-not: $PAGE.evaluate(function $FNAME(...){...},...)
  - pattern-not: $PAGE.evaluateHandle("...",...)
  - pattern-not: $PAGE.evaluateHandle(function(...){...},...)
  - pattern-not: $PAGE.evaluateHandle(function $FNAME(...){...},...)
- id: playwright-evaluate-arg-injection
  message: |
    If unverified user data can reach the `evaluate` method it can result in Server-Side Request Forgery vulnerabilities
  severity: WARNING
  metadata:
    owasp: 'A1: Injection'
    cwe: 'CWE-918: Server-Side Request Forgery (SSRF)'
  languages: [javascript]
  patterns:
  - pattern-inside: |
      ...
      require('playwright');
      ...
  - pattern-either:
    - pattern-inside: function $FUNC (...,$INPUT,...) {...}
    - pattern-inside: function (...,$INPUT,...) {...}
  - pattern-either:
    - pattern: $PAGE.evaluate($CODE,...,<... $INPUT ...>,...)
    - pattern: $PAGE.evaluateHandle($CODE,...,<... $INPUT ...>,...)
