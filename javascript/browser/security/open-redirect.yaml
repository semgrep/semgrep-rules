rules:
  - id: js-open-redirect
    message: >-
      The application accepts potentially user-controlled input `$PROP` which
      can control the location of the current window context. This can lead two
      types of vulnerabilities open-redirection and Cross-Site-Scripting
      (XSS)  with JavaScript URIs. It is recommended to validate
      user-controllable  input before allowing it to control the redirection.
    metadata:
      cwe: "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
      owasp:
        - A10:2013 - Unvalidated Redirects and Forwards
        - A07:2017 - Cross-Site Scripting
        - A03:2021 - Injection
      asvs:
        section: V5 Validation, Sanitization and Encoding
        control_id: 5.5.1 Insecue Redirect
        control_url: https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v51-input-validation
        version: "4"
      category: security
      confidence: HIGH
      references:
        - https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html
      technology:
        - browser
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
    languages:
      - javascript
      - typescript
    severity: WARNING
    mode: taint
pattern-sources:
  - patterns:
      - pattern-either:
          - pattern-inside: >
              $PROP = new URLSearchParams($WINDOW. ...
              .location.search).get('...')
                ...
          - pattern-inside: |
              $PROP = new URLSearchParams(location.search).get('...')
                ...
          - pattern-inside: >
              $PROP = new URLSearchParams($WINDOW. ... .location.hash.substring(1)).get('...')
                ...
          - pattern-inside: |
              $PROP = new
              URLSearchParams(location.hash.substring(1)).get('...')
                ...
      - pattern: $PROP
  - patterns:
      - pattern-either:
          - pattern-inside: |
              $PROPS = new URLSearchParams($WINDOW. ... .location.search)
                ...
          - pattern-inside: |
              $PROPS = new URLSearchParams(location.search)
                ...
          - pattern-inside: |
              $PROPS = new
              URLSearchParams($WINDOW. ... .location.hash.substring(1))
                ...
          - pattern-inside: |
              $PROPS = new URLSearchParams(location.hash.substring(1))
              ...
      - pattern: $PROPS.get('...')
    pattern-sinks:
      - patterns:
          - pattern-either:
              - pattern: location.href = $SINK
              - pattern: window.location.href = $SINK
              - pattern: this.window.location.href = $SINK
              - pattern: this.location.href = $SINK
              - pattern: location.replace($SINK)
              - pattern: window.location.replace($SINK)
              - pattern: this.window.location.replace($SINK)
              - pattern: this.location.replace($SINK)
          - focus-metavariable: $SINK
          - metavariable-pattern:
              metavariable: $SINK
              patterns:
                - pattern-not: |
                    "..." + $VALUE
                - pattern-not: |
                    `...${$VALUE}`
