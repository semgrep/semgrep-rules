rules:
- id: header_xss_lusca
  message: >-
    X-XSS-Protection header is set to 0. This will disable the browser's XSS
    Filter.
  severity: ERROR
  metadata:
    likelihood: LOW
    impact: LOW
    confidence: LOW
    category: security
    cwe:
    - 'CWE-693: Protection Mechanism Failure'
    technology:
      - web
    references:
      - https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
    subcategory:
    - audit
  languages:
  - javascript
  patterns:
  - pattern-inside: |
      $X = require('lusca')
      ...
  - pattern-not: |
      $X.use(helmet())
  - pattern-either:
    - pattern: |
        $X.xssProtection(false)
    - pattern: |
        $X({ xssProtection: false})
- id: header_xss_generic
  message: >-
    X-XSS-Protection header is set to 0. This will disable the browser's XSS
    Filter.
  severity: ERROR
  metadata:
    likelihood: LOW
    impact: LOW
    confidence: LOW
    category: security
    cwe:
    - 'CWE-693: Protection Mechanism Failure'
    technology:
      - web
    references:
      - https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
    subcategory:
    - audit
  languages:
  - javascript
  patterns:
  - pattern-either:
    - pattern-inside: function ($REQ, $RES, ...) {...}
    - pattern-inside: function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: $X = function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: var $X = function $FUNC($REQ, $RES, ...) {...};
    - pattern-inside: $APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})
  - pattern-either:
    - pattern: |
        $RES.header("=~/x-xss-protection/i", 0, ...)
    - pattern: |
        $RES.set("=~/x-xss-protection/i", 0, ...)
    - pattern: >
        $RES.set(..., { "=~/x-xss-protection/i" : 0 },
        ...)
    - pattern: >
        $RES.writeHead(..., {"=~/x-xss-protection/i": 0
        }, ...)
