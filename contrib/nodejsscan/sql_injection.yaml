rules:
  - id: node_sqli_injection
    patterns:
      - pattern-either:
          - pattern: |
              $CON.query(<... $REQ.$QUERY.$VAR ...>, ...)
          - pattern: |
              $CON.query(<... $REQ.$QUERY ...>, ...)
          - pattern: |
              var $SQL = <... $REQ.$QUERY.$VAR ...>;
              ...
              $CON.query(<... $SQL ...>, ...);
          - pattern: |
              var $SQL = <... $REQ.$QUERY ...>;
              ...
              $CON.query(<... $SQL ...>, ...);
          - pattern: |
              var $INP = <... $REQ.$QUERY.$VAR ...>;
              ...
              var $SQL = <... $INP ...>;
              ...
              $CON.query(<... $SQL ...>, ...);  
          - pattern: |
              var $INP = <... $REQ.$QUERY ...>;
              ...
              var $SQL = <... $INP ...>;
              ...
              $CON.query(<... $SQL ...>, ...);  
    message: >-
      Untrusted input concatinated with raw SQL query can result in SQL
      Injection.
    languages:
      - javascript
    severity: ERROR
    metadata:
      owasp: 'A1: Injection'
      cwe: >-
        CWE-89: Improper Neutralization of Special Elements used in an SQL
        Command ('SQL Injection')
