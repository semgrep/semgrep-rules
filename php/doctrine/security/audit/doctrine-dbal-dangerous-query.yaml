rules:
  - id: doctrine-dbal-dangerous-query
    languages:
      - php
    message:
      Detected string concatenation with a non-literal variable in a Doctrine DBAL query method. This could lead to SQL
      injection if the variable is user-controlled and not properly sanitized. In order to prevent SQL injection, used parameterized
      queries or prepared statements instead.
    metadata:
      category: security
      cwe: "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]
      owasp: "A1: Injection"
      references:
        - https://www.doctrine-project.org/projects/doctrine-dbal/en/current/reference/security.html
        - https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
      technology:
        - doctrine
    patterns:
      - pattern-either:
          - pattern: $CONNECTION->prepare($QUERY,...)
          - pattern: $CONNECTION->createQuery($QUERY,...)
          - pattern: $CONNECTION->executeQuery($QUERY,...)
      - pattern-either:
          - pattern-inside: |
              use Doctrine\DBAL\Connection;
              ...
          - pattern-inside: |
              $CONNECTION = $SMTH->getConnection(...);
              ...
      - pattern-not: $CONNECTION->prepare("...",...)
      - pattern-not: $CONNECTION->createQuery("...",...)
      - pattern-not: $CONNECTION->executeQuery("...",...)
    severity: WARNING
