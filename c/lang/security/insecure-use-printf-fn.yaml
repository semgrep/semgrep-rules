rules:
- id: insecure-use-printf-fn
  pattern-either:
  - pattern: |
      $FORMAT = "=~/.*%.*[n,s,x,u,d].*/";
      ...
      vsprintf(..., $FORMAT, ...);
  - pattern: vsprintf(..., "=~/.*%.*[n,s,x,u,d].*/", ...)
  - pattern: |
      $FORMAT = "=~/.*%.*[n,s,x,u,d].*/";
      ...
      sprintf(..., $FORMAT, ...);
  - pattern: sprintf(...,"=~/.*%.*[n,s,x,u,d].*/",...)
  - pattern: |
      $FORMAT = "=~/.*%.*[n,s,x,u,d].*/";
      ...
      printf($FORMAT, ...);
  - pattern: printf("=~/.*%.*[n,s,x,u,d].*/", ...)
  message: |
    Avoid using specific indicators in 'sprintf', 'printf' and 'vsprintf'.
    These functions put you at risk of buffer overflow vulnerabilities through the use of format string exploits.
    Instead, use 'snprintf' and 'vsnprintf'.
  metadata:
    references:
    - https://doc.castsoftware.com/display/SBX/Never+use+sprintf%28%29+or+vsprintf%28%29+functions
    - https://www.cvedetails.com/cwe-details/134/Uncontrolled-Format-String.html
  languages: [c]
  severity: WARNING
