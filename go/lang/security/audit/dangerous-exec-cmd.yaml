rules:
- id: dangerous-exec-cmd
  pattern-either:
  - patterns:
    - pattern-either:
      - pattern: |
          exec.Cmd {...,Path: $CMD,...}
    - pattern-not: |
        exec.Cmd {...,Path: "...",...}
    - pattern-inside: |
        import "os/exec"
        ...
    - pattern-not-inside: |
        $CMD,$ERR := exec.LookPath("...");
        ...
    - pattern-not-inside: |
        $CMD = "...";
        ...
  - patterns:
    - pattern-either:
      - patterns:
        - pattern: |
            exec.Cmd {...,Args: $ARGS,...}
        - pattern-not: |
            exec.Cmd {...,Args: []string{...},...}
        - pattern-not-inside: |
            $ARGS = []string{"...",...};
            ...
        - pattern-not-inside: |
            $CMD = "...";
            ...
            $ARGS = []string{$CMD,...};
            ...
        - pattern-not-inside: |
            $CMD = exec.LookPath("...");
            ...
            $ARGS = []string{$CMD,...};
            ...
      - patterns:
        - pattern: |
            exec.Cmd {...,Args: []string{$CMD,...},...}
        - pattern-not: |
            exec.Cmd {...,Args: []string{"...",...},...}
        - pattern-not-inside: |
            $CMD,$ERR := exec.LookPath("...");
            ...
        - pattern-not-inside: |
            $CMD = "...";
            ...
    - pattern-inside: |
        import "os/exec"
        ...
  message: |
    Detected non-static command inside exec.Cmd. Audit the input to 'exec.Cmd'.
    If unverified user data can reach this call site, this is a code injection
    vulnerability. A malicious actor can inject a malicious script to execute
    arbitrary code.
  metadata:
    cwe: "CWE-94: Improper Control of Generation of Code ('Code Injection')"
    owasp: 'A1: Injection'
  severity: WARNING
  languages: [go]
