rules:
  - id: ruby-eval
    message: >-
      Use of eval with user-controllable input detected. This can lead to attackers running arbitrary code. Ensure external data
      does not reach here, otherwise this is a security vulnerability.
      Consider other ways to do this without eval.
    languages: [ruby]
    severity: WARNING
    mode: taint
    pattern-sources:
      - pattern-either:
        - pattern: params
        - pattern: cookies
        - patterns:
          - pattern: |
              RubyVM::InstructionSequence.compile(...)
          - pattern-not: |
              RubyVM::InstructionSequence.compile("...")
    pattern-sinks:
      - patterns:
        - pattern-either:
            - pattern: $X.eval
            - pattern: $X.class_eval
            - pattern: $X.instance_eval
            - pattern: $X.module_eval
            - pattern: $X.eval(...)
            - pattern: $X.class_eval(...)
            - pattern: $X.instance_eval(...)
            - pattern: $X.module_eval(...)
            - pattern: eval(...)
            - pattern: class_eval(...)
            - pattern: module_eval(...)
            - pattern: instance_eval(...)
        - pattern-not: $M("...",...)
    metadata:
      source-rule-url: https://github.com/presidentbeef/brakeman/blob/main/lib/brakeman/checks/check_evaluation.rb
      category: security
      owasp:
        - A03:2021 - Injection
        - A01:2017 - Injection
      cwe: >-
        CWE-95: Improper Neutralization of Directives in Dynamically Evaluated
        Code ('Eval Injection')
      references:
        - https://owasp.org/www-community/attacks/Code_Injection
      technology:
        - ruby
        - rails
