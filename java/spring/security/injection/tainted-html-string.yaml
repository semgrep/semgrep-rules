rules:
  - id: tainted-html-string
    languages:
      - java
    severity: ERROR
    message: >-
      Detected user input flowing into a manually constructed HTML string.
      You may be accidentally bypassing secure methods of rendering HTML by
      manually constructing HTML and this could create a cross-site scripting
      vulnerability, which could let attackers steal sensitive user data. To be
      sure this is safe, check that the HTML is rendered safely. You can use
      the OWASP ESAPI encoder if you must render user data.
    metadata:
      cwe: "CWE-79: XSS"
      owasp:
        - A03:2021
        - A07:2017
      references:
        - https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html
      category: security
      technology:
        - java
        - spring
    mode: taint
    pattern-sources:
      - patterns:
          - pattern-either:
              - pattern: |
                  @RequestMapping(...) $RETURNTYPE $METHODNAME(..., @$ANNOTATION
                  $TYPE $PARAMETER, ...) {
                    ...
                  }
              - pattern: |
                  @RequestMapping(...) $RETURNTYPE $METHODNAME(...,
                  @$ANNOTATION(...) $TYPE $PARAMETER, ...) {
                    ...
                  }
              - pattern: |
                  $RETURNTYPE $METHODNAME(..., @RequestParam $TYPE $PARAMETER) {
                    ...
                  }
              - pattern: |
                  $RETURNTYPE $METHODNAME(..., @RequestParam($LOOKUP) $TYPE $PARAMETER) {
                    ...
                  }
    pattern-sinks:
      - patterns:
          - patterns:
              - pattern-either:
                  - pattern: |
                      "$HTMLSTR" + ...
                  - pattern: |
                      "$HTMLSTR".concat(...)
                  - patterns:
                      - pattern-inside: |
                          StringBuilder $SB = new StringBuilder("$HTMLSTR");
                          ...
                      - pattern: $SB.append(...)
                  - patterns:
                      - pattern-inside: |
                          $VAR = "$HTMLSTR";
                          ...
                      - pattern: $VAR += ...
                  - pattern: String.format("$HTMLSTR", ...)
                  - patterns:
                    - pattern-inside: |
                        String $VAR = "$HTMLSTR";
                        ...
                    - pattern: String.format($VAR, ...)
              - metavariable-regex:
                  metavariable: $HTMLSTR
                  regex: ^<\w+

