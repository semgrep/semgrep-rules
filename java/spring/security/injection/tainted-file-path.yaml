rules:
  - id: tainted-file-path
    languages:
      - java
    severity: ERROR
    message: >-
      Detected user input creating a file path. An attacker could control
      the location of this file, to include going backwards in the directory
      with '../'. To address this, ensure that user-controlled variables in file
      paths are sanitized. You may also consider using a utility method such as
      org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file
      name from the path.
    metadata:
      cwe: "CWE-23: Relative Path Traversal"
      owasp:
        - A03:2021 - Injection
        - A01:2017 - Injection
      references:
      - https://owasp.org/www-community/attacks/Path_Traversal
      category: security
      technology:
        - java
        - spring
    mode: taint
    pattern-sources:
      - patterns:
          - pattern-either:
              - pattern: |
                  @RequestMapping(...) $RETURNTYPE $METHODNAME(..., @$ANNOTATION
                  $TYPE $PARAMETER, ...) {
                    ...
                  }
              - pattern: |
                  @RequestMapping(...) $RETURNTYPE $METHODNAME(...,
                  @$ANNOTATION(...) $TYPE $PARAMETER, ...) {
                    ...
                  }
              - pattern: |
                  $RETURNTYPE $METHODNAME(..., @RequestParam $TYPE $PARAMETER) {
                    ...
                  }
              - pattern: |
                  $RETURNTYPE $METHODNAME(..., @RequestParam($LOOKUP) $TYPE $PARAMETER) {
                    ...
                  }
    pattern-sinks:
    - pattern-either:
      - pattern: new FileInputStream(...)
      - pattern: new FileReader(...)
      - pattern: new File(...)
      - pattern: $SOMETHING.getResourceAsStream(...)
